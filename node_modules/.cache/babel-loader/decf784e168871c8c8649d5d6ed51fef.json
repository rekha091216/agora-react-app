{"ast":null,"code":"var _jsxFileName = \"/Users/rekhab/Downloads/API-Examples-Web-main 2/ReactDemo/src/components/MediaPlayer.tsx\";\nimport React, { useRef, useEffect } from \"react\";\n\nconst MediaPlayer = props => {\n  const container = useRef(null);\n  useEffect(() => {\n    var _props$videoTrack;\n\n    if (!container.current) return;\n    (_props$videoTrack = props.videoTrack) === null || _props$videoTrack === void 0 ? void 0 : _props$videoTrack.play(container.current);\n    return () => {\n      var _props$videoTrack2;\n\n      (_props$videoTrack2 = props.videoTrack) === null || _props$videoTrack2 === void 0 ? void 0 : _props$videoTrack2.stop();\n    };\n  }, [container, props.videoTrack]);\n  useEffect(() => {\n    if (props.audioTrack) {\n      var _props$audioTrack;\n\n      (_props$audioTrack = props.audioTrack) === null || _props$audioTrack === void 0 ? void 0 : _props$audioTrack.play();\n    }\n\n    return () => {\n      var _props$audioTrack2;\n\n      (_props$audioTrack2 = props.audioTrack) === null || _props$audioTrack2 === void 0 ? void 0 : _props$audioTrack2.stop();\n    };\n  }, [props.audioTrack]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: container,\n    className: \"video-player\",\n    style: {\n      width: \"320px\",\n      height: \"240px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default MediaPlayer;","map":{"version":3,"sources":["/Users/rekhab/Downloads/API-Examples-Web-main 2/ReactDemo/src/components/MediaPlayer.tsx"],"names":["React","useRef","useEffect","MediaPlayer","props","container","current","videoTrack","play","stop","audioTrack","width","height"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAOA,MAAMC,WAAW,GAAIC,KAAD,IAA6B;AAC/C,QAAMC,SAAS,GAAGJ,MAAM,CAAiB,IAAjB,CAAxB;AACAC,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,QAAI,CAACG,SAAS,CAACC,OAAf,EAAwB;AACxB,yBAAAF,KAAK,CAACG,UAAN,wEAAkBC,IAAlB,CAAuBH,SAAS,CAACC,OAAjC;AACA,WAAO,MAAM;AAAA;;AACX,4BAAAF,KAAK,CAACG,UAAN,0EAAkBE,IAAlB;AACD,KAFD;AAGD,GANQ,EAMN,CAACJ,SAAD,EAAYD,KAAK,CAACG,UAAlB,CANM,CAAT;AAOAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGE,KAAK,CAACM,UAAT,EAAoB;AAAA;;AAClB,2BAAAN,KAAK,CAACM,UAAN,wEAAkBF,IAAlB;AACD;;AACD,WAAO,MAAM;AAAA;;AACX,4BAAAJ,KAAK,CAACM,UAAN,0EAAkBD,IAAlB;AACD,KAFD;AAGD,GAPQ,EAON,CAACL,KAAK,CAACM,UAAP,CAPM,CAAT;AAQA,sBACE;AAAK,IAAA,GAAG,EAAEL,SAAV;AAAsB,IAAA,SAAS,EAAC,cAAhC;AAA+C,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CApBD;;AAsBA,eAAeT,WAAf","sourcesContent":["import { ILocalVideoTrack, IRemoteVideoTrack, ILocalAudioTrack, IRemoteAudioTrack } from \"agora-rtc-sdk-ng\";\nimport React, { useRef, useEffect } from \"react\";\n\nexport interface VideoPlayerProps {\n  videoTrack: ILocalVideoTrack | IRemoteVideoTrack | undefined;\n  audioTrack: ILocalAudioTrack | IRemoteAudioTrack | undefined;\n}\n\nconst MediaPlayer = (props: VideoPlayerProps) => {\n  const container = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (!container.current) return;\n    props.videoTrack?.play(container.current);\n    return () => {\n      props.videoTrack?.stop();\n    };\n  }, [container, props.videoTrack]);\n  useEffect(() => {\n    if(props.audioTrack){\n      props.audioTrack?.play();\n    }\n    return () => {\n      props.audioTrack?.stop();\n    };\n  }, [props.audioTrack]);\n  return (\n    <div ref={container}  className=\"video-player\" style={{ width: \"320px\", height: \"240px\"}}></div>\n  );\n}\n\nexport default MediaPlayer;"]},"metadata":{},"sourceType":"module"}