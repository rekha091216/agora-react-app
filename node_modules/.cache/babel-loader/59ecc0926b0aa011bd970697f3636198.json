{"ast":null,"code":"var _jsxFileName = \"/Users/rekhab/Downloads/ReactDemo/src/Call.tsx\";\nimport React, { useState } from 'react';\nimport AgoraRTC from 'agora-rtc-sdk-ng';\nimport useAgora from './hooks/useAgora';\nimport MediaPlayer from './components/MediaPlayer';\nimport './Call.css';\nconst client = AgoraRTC.createClient({\n  codec: 'h264',\n  mode: 'rtc'\n});\n\nfunction Call() {\n  const [appid, setAppid] = useState('');\n  const [token, setToken] = useState('');\n  const [channel, setChannel] = useState('');\n  const {\n    localAudioTrack,\n    localVideoTrack,\n    leave,\n    join,\n    joinState,\n    remoteUsers\n  } = useAgora(client);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"call\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"call-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"AppID:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"appid\",\n    onChange: event => {\n      setAppid(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Token(Optional):\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"token\",\n    onChange: event => {\n      setToken(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Channel:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"channel\",\n    onChange: event => {\n      setChannel(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"join\",\n    type: \"button\",\n    className: \"btn btn-primary btn-sm\",\n    disabled: joinState,\n    onClick: () => {\n      join(appid, channel, token);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Join\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"leave\",\n    type: \"button\",\n    className: \"btn btn-primary btn-sm\",\n    disabled: !joinState,\n    onClick: () => {\n      leave();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Leave\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"local-player-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"local-player-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, localVideoTrack && `localTrack`, joinState && localVideoTrack ? `(${client.uid})` : ''), /*#__PURE__*/React.createElement(MediaPlayer, {\n    videoTrack: localVideoTrack,\n    audioTrack: undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), remoteUsers.map(user => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"remote-player-wrapper\",\n    key: user.uid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"remote-player-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, `remoteVideo(${user.uid})`), /*#__PURE__*/React.createElement(MediaPlayer, {\n    videoTrack: user.videoTrack,\n    audioTrack: user.audioTrack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Call;","map":{"version":3,"sources":["/Users/rekhab/Downloads/ReactDemo/src/Call.tsx"],"names":["React","useState","AgoraRTC","useAgora","MediaPlayer","client","createClient","codec","mode","Call","appid","setAppid","token","setToken","channel","setChannel","localAudioTrack","localVideoTrack","leave","join","joinState","remoteUsers","event","target","value","uid","undefined","map","user","videoTrack","audioTrack"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport AgoraRTC from 'agora-rtc-sdk-ng';\nimport useAgora from './hooks/useAgora';\nimport MediaPlayer from './components/MediaPlayer';\nimport './Call.css';\n\nconst client = AgoraRTC.createClient({ codec: 'h264', mode: 'rtc' });\n\nfunction Call() {\n  const [ appid, setAppid ] = useState('');\n  const [ token, setToken ] = useState('');\n  const [ channel, setChannel ] = useState('');\n  const {\n    localAudioTrack, localVideoTrack, leave, join, joinState, remoteUsers\n  } = useAgora(client);\n\n  return (\n    <div className='call'>\n      <form className='call-form'>\n        <label>\n          AppID:\n          <input type='text' name='appid' onChange={(event) => { setAppid(event.target.value) }}/>\n        </label>\n        <label>\n          Token(Optional):\n          <input type='text' name='token' onChange={(event) => { setToken(event.target.value) }} />\n        </label>\n        <label>\n          Channel:\n          <input type='text' name='channel' onChange={(event) => { setChannel(event.target.value) }} />\n        </label>\n        <div className='button-group'>\n          <button id='join' type='button' className='btn btn-primary btn-sm' disabled={joinState} onClick={() => {join(appid, channel, token)}}>Join</button>\n          <button id='leave' type='button' className='btn btn-primary btn-sm' disabled={!joinState} onClick={() => {leave()}}>Leave</button>\n        </div>\n      </form>\n      <div className='player-container'>\n        <div className='local-player-wrapper'>\n          <p className='local-player-text'>{localVideoTrack && `localTrack`}{joinState && localVideoTrack ? `(${client.uid})` : ''}</p>\n          <MediaPlayer videoTrack={localVideoTrack} audioTrack={undefined}></MediaPlayer>\n        </div>\n        {remoteUsers.map(user => (<div className='remote-player-wrapper' key={user.uid}>\n            <p className='remote-player-text'>{`remoteVideo(${user.uid})`}</p>\n            <MediaPlayer videoTrack={user.videoTrack} audioTrack={user.audioTrack}></MediaPlayer>\n          </div>))}\n      </div>\n    </div>\n  );\n}\n\nexport default Call;\n"]},"metadata":{},"sourceType":"module"}